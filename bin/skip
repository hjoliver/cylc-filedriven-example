#!/bin/env python3

"""Match input and output files, and exit 1 if the outputs are out of date.

Output files are out of date if any have older mod-times than any input files.

Path globs representing one or more FILES can be given on the command line or
taken from the environment:
   $ skip [-v] [INPUT-GLOB OUTPUT-GLOB]
     or
   $ skip [-v]  # with $INPUT and $OUTPUT

Multiple globs can be combined with a comma-separator, e.g.:
   $ INPUT="foo.*, bar.*"

Paths must be absolute, to avoid dependence on the scheduler CWD.

Limitations: input and output directories are not yet supported.

Usage:
   $ skip || <regenerate-outputs>
"""

# TODO allow directories as outputs. See:
# https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#directories-as-outputs
# May need to flag dirs explicitly, e.g. "DIR:foo.*".
# Directory mod-times update on read, so need to write a timestamp file to the directory?


import os
import sys
import logging

from iomodtimes import (
    outdated,
    delete_files,
    file_globber
)


if __name__ == "__main__":
    if "-v" in sys.argv:
        logging.getLogger().setLevel(logging.DEBUG)
        sys.argv.remove('-v')

    if len(sys.argv) == 3:
        input_globs = sys.argv[1]
        output_globs = sys.argv[2]
    else:
        try:
            input_globs = os.environ['INPUT']
            output_globs = os.environ['OUTPUT']
        except KeyError:
            sys.stderr.write(__doc__)
            sys.exit(1)

    if len(file_globber(input_globs)) == 0:
        raise FileNotFoundError(input_globs)

    if not outdated(input_globs, output_globs):
        print("Output files are up to date.")
        sys.exit(0)
    else:
        print("Regeneration of output files needed.")
        delete_files(output_globs)
        sys.exit(1)
